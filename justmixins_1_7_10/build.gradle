buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://plugins.gradle.org/m2" }
        maven { url = "https://maven.minecraftforge.net/" }
    }
    dependencies {
        classpath("com.anatawa12.forge:ForgeGradle:1.2-1.0.+") {
            changing = true
        }
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
    }
}

apply plugin: "forge"
apply plugin: "com.github.johnrengelman.shadow"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = compileTestJava.options.encoding = "UTF-8"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

minecraft {
    version = project.forgeVersion
    mappings = project.mcpVersion
    runDir = "run"
}

repositories {
    mavenCentral()
    maven { url = "https://repo.spongepowered.org/maven" }
}

dependencies {
    shadow("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: "launchwrapper"
        exclude module: 'guava'
    }

    /*
    // Неудачная попытка подружить 0.8.3 с 1.7.10
    // Запускается, но не все миксины работают, причина вероятно в использовании разных версий ASM

    shadow "org.spongepowered:mixin:0.8.3-SNAPSHOT"

    shadow "com.google.guava:guava:21.0"
    shadow "org.ow2.asm:asm-debug-all:5.2"
    shadow "org.ow2.asm:asm-tree:7.2"
    shadow "org.ow2.asm:asm-commons:7.2"
    shadow "org.ow2.asm:asm-util:7.2"
     */
}

jar {
    manifest {
        attributes(
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "FMLCorePluginContainsFMLMod": "true",
                "ForceLoadAsMod": "true",
        )
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier = null
    exclude "dummyThing"
    exclude "META-INF/LICENSE.txt"
    exclude "META-INF/NOTICE.txt"
}

build.dependsOn(shadowJar)

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
