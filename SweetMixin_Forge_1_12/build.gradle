buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://plugins.gradle.org/m2" }
        maven { url = "https://repo.spongepowered.org/maven" }
        maven { url = "https://maven.minecraftforge.net/" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: "org.spongepowered.mixin"

version = project.modVersion
group = project.modGroup
archivesBaseName = project.modBaseName

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = compileTestJava.options.encoding = "UTF-8"

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'stable', version: "39-1.12"

    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Нужно для работы миксинов в DEV среде
            // Program arguments to setup and run MIXINS
            args '--tweakClass', 'org.spongepowered.asm.launch.MixinTweaker', '--mixin', 'mixins.sweetmixin.json'

            mods {
                sweetmixin {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Нужно для работы миксинов в DEV среде
            // Program arguments to setup and run MIXINS
            args '--tweakClass', 'org.spongepowered.asm.launch.MixinTweaker', '--mixin', 'mixins.sweetmixin.json'

            mods {
                sweetmixin {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "sweetmixin.refmap.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven { url = "https://repo.spongepowered.org/maven" }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    //minecraft '@FORGE_GROUP@:@FORGE_NAME@:@FORGE_VERSION@'
    minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2855"

    implementation "org.spongepowered:mixin:0.8.3-SNAPSHOT"
    annotationProcessor 'org.spongepowered:mixin:0.8.3-SNAPSHOT:processor'
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "MixinConfigs": "mixins.sweetmixin.json",
                "FMLCorePluginContainsFMLMod": "true", // Не забываем указать эти два флага,
                "ForceLoadAsMod": "true",              // чтобы Forge нормально загрузил и мод, и миксины
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
